
-- The PluginInfo header contains some important information that Q-Sys Designer will parse when compiled. 
-- Id is a unique ID given to every plugin. While we typically use randomly generated UUID's, you can use anything here so long as it is unique 
-- 

PluginInfo = 
{
	Name = "CinemaNext~PAA 20+", -- The tilde here indicates folder structure in the Shematic Elements pane
	Version = "1.0",
	Id = "9b447e57-9cc9-4a10-a4fe-c91234fg8967", -- show this is just a unique id. Show some commented out 'fun' unique ids
	Description = "Control Plugin for the CinemaNext PAA 20+",
	--ShowDebug = true,
}

-- Once you've drawn your plugin in Designer, you can determine what colors you use a lot. Save yourself some time by putting them in a table, and then simply calling them later. 
local Colors = { 
	White = {255,255,255},
	Gray = {181,158,158},
	Red = {255,0,0},
	Green = {0,255,0},
	Red = {255,0,0},
	Black= {0,0,0},
}

-- We can let users determine some of the plugin properties by exposing them here
-- While this function can be very useful, it is completely optional and not always needed. 
-- If no Properties are set here, only the position and fill properties of your plugin will show in the Properties pane 
function GetProperties() 
	props = { 
		{  -- When only Q-SYS Controls PAA the socket can stay open. 
			Name = "Control Mode",
			Type = "enum",
			Choices = {"Only Q-Sys","Q-Sys + Other",},
			Value = "Only Q-Sys", 
		},
		{
			Name = "Socket Timeout in ms",
			Type = "integer",
			Min = 10,
			Max = 60000,
			Value = 1000,
		},
		{ -- Determines how often the Status XML gets polled
			Name = "Polltime in s",
			Type = "enum",
			Choices = {"0.1","0.3","0.5","0.8","1"},
			Value = "0.5", 
		},
		{
			Name = "Custom Commands",
			Type = "enum",
			Choices = {"Yes","No"},
			Value = "No",
		},
	}
	return props
end

function RectifyProperties(props) 
	if props["Control Mode"].Value == "Only Q-Sys" then props["Socket Timeout in ms"].IsHidden = true end
	return props
end


function GetControls(props)
	ctls = {
		--[[{
			Name = "code", -- This control is only here for testing, and will be removed once the plugin is finished. Once you have your plugin drawn, wire your Text Controller or Control Script to this to test functionality.
			ControlType = "Text",
			PinStyle = "Input", -- Add explanation 
			Count = 1 
		},]]
		{
			Name = "Polltime",
			ControlType = "Knob",
			ControlUnit = "Integer",
			DefaultValue = "1",
		},		
		{
			Name = "OUT",
			ControlType = "Indicator",
			IndicatorType = "Led",
			Count = 12, 
			UserPin = true, 
			PinStyle = "Output",
		},
		{	Name = "IN",
			ControlType = "Indicator",
			IndicatorType = "Led",
			Count = 8, 
			UserPin = true, 
			PinStyle = "Output",
		},
		{	Name = "BUTTON",
			ControlType = "Button",
			ButtonType = "Toggle",
			Count = 12, 
			UserPin = true, 
			PinStyle = "Both",
		},
		{	Name = "Status",
			ControlType = "Indicator",
			IndicatorType = "Status",
			Count = 1, 
			UserPin = true, 
			PinStyle = "Output",
		},
		{	Name = "Port",
			ControlType = "Text",
			--ButtonType = "TextBox",
			DefaultValue="10001",
			Count = 1, 
			UserPin = true, 
			PinStyle = "Both",
		},
		{	Name = "IP",
			ControlType = "Text",
			--ButtonType = "TextBox",
			DefaultValue="10.0.0.180",
			Count = 1, 
			UserPin = true, 
			PinStyle = "Both",
		},
		{	Name = "PULSE",
			ControlType = "Button",
			ButtonType = "Trigger",
			Count = 12, 
			UserPin = true, 
			PinStyle = "Both",
		},
		{
			Name = "Commands On",
			ControlType = "Text",
			Count = 1,
			UserPin = true,
			PinStyle = "Both",
			DefaultValue = "61U61UM,62U62UN,63U63UO,64U64UP,65U65UQ,66U66UR,67U67US,68U68UT,69U69UU,6AU6AUV,6BU6BUW,6CU6CUX"
		},
		{
			Name = "Commands Off",
			ControlType = "Text",
			Count = 1,
			UserPin = true,
			PinStyle = "Both",
			DefaultValue = "71U71UY,72U72UZ,73U73U0,74U74U1,75U75U2,76U76U3,77U77U4,78U78U5,79U79U6,7AU7AU7,7BU7BU8,7CU7CU9"
		},
		{
			Name = "Commands Pulse",
			ControlType = "Text",
			Count = 1,
			UserPin = true,
			PinStyle = "Both",
			DefaultValue = "51U51UA,52U52UB,53U53UC,54U54UD,55U55UE,56U56UF,57U57UG,58U58UH,59U59UI,5AU5AUJ,5BU5BUK,5CU5CUL"
		}
		
	}
	return ctls
end


function GetControlLayout(props)
	
	local outs = 12
	local ins = 8 
	local layout = {}

	--layout.code = {PrettyName="code",Style="Text",Position={8,14},Size={6,6},IsInvisible = true} -- This is to draw my code pin, which you'll comment out later once the plugin is finished
		for i=1,outs do
			-- The tostring() call below handles when there is only one input (inpnum==1) and the control is not captured in an array. 
			-- This has to do with how Lua compiles on the back end and the below logic allows us to accommdate both scenarios: a single control or an array of controls
			layout["OUT "..i] = 
			{
				PrettyName = string.format("Out~CH%i",i),
				Style = "Indicator",
				IndicatorType = "LED",
				Color = Colors.Red,
				Margin = 0,
				Position = {281+32*(i-1),70},
				Size = {12,12}
			}
			layout["PULSE "..i] =
			{
				PrettyName = string.format("Pulse~CH%i",i),
				Style = "Button",
				ButtonStyle = "Trigger",
				Legend = "Pulse",
				ButtonVisualStyle = Gloss,
				Position = {279+32*(i-1),45},
				Size = {31,24}
			}
			layout["BUTTON " ..i] = -- This format is the same as table.insert(layout,'your control stuff here')
			{
				PrettyName = string.format("Toggle~CH %i",i),-- The tilde (~) creates a folder for the pins. This can help keep your pins organized and the property pane looking clean
				Style = "Button",
				ButtonStyle = "Toggle",
				Legend = "Toggle",
				ButtonVisualStyle = Gloss,
				Color = Gray,
				UnlinkOffColor = yes,
				Offcolor = White,
				-- Notice below I am using i to determine the position dynamically: 55 is the X position of the first ctl, and 49 is the distance to the next X value. 
				-- Multiply by i-1 so the addition begins with the second ctl instead of the first. Thus, if i==2, we will multiply 49 by and add that to 55, giving us the X value of our second ctl
				-- This is a valuable technique if you want to offer a plugin that is not only dynamic, but configurable by the end-user
				Position = {279+32*(i-1),13}, 
				Size = {31,24},
			}
		end
		for j=1,ins do
			layout["IN ".. j] =
			{
				PrettyName = string.format("In~CH%i",j),
				Style = "Indicator",
				IndicatorType = "Led",
				Margin = 0,
				Position = {672+32*(j-1),70},
				Size = {12,12},
			}
		end
			layout["IP"] = 
			{
				PrettyName = "IP Address",
				Style = "Text",
				Position = {379,90},
				Size = {168,16},
			}
			layout["Port"] = 
			{
				PrettyName = "Port",
				Style = "Text",
				Position = {600,90},
				Size = {36,16},
			}
			layout["Status"] =
			{
				PrettyName = "Status",
				Style = "Indicator",
				Position = {138,16},
				Size = {128,16},
			}
			if props["Custom Commands"].Value == "Yes" then 
			layout["Commands On"] =
			{
				PrettyName = "On Commands",
				Style = "TextBox",
				Position = {110,114},
				Size = {882,30},
				FontSize = 12,
			}
			layout["Commands Off"] =
			{
				PrettyName = "Off Commands",
				Style = "TextBox",
				Position = {110,145},
				Size = {882,30},
				FontSize = 12,
			}
			layout["Commands Pulse"] =
			{
				PrettyName = "Pulse Commands",
				Style = "TextBox",
				Position = {110,176},
				Size = {882,30},
				FontSize = 12,
			} 
			end


		graphics = { 
			{ 
				Type = "Svg",  
				Image = "",	
				Position = {0,0},
				Size = {992,113}
			},
			{
				Type = "Text",
				Text = "IP",
				Color = Colors.White,
				Position = {326,90},
				Size = {53,16},
				FontSize = 12,
			},
			{
				Type = "Text",
				Text = "Port",
				Color = Colors.White,
				Position = {547,90},
				Size = {53,16},
				FontSize = 12,
			},
			
			
			--[[{
				Type = "Groupbox", -- This is the overall groupbox that will give the plugin a more 'contained' look
				Fill = Colors.White,
				CornerRadius = 8,
				StrokeColor = Colors.Black,
				StrokeWidth = 1,
				Position = {0,0},
				Size = {104+49*(12-1),393} -- The width of the main GroupBox is dependent on how many channels the user specified. More channels means a wider group box
			},
			-- I've collapsed other graphic properties into single lines to save space. Saving space isn't a top priority, but it can make your file look more clean and readable for others.
			{Type = "GroupBox",
			Text = "EQ",
			HTextAlign = "Left",
			CornerRadius = 8,
			StrokeColor = Colors.Black,
			StrokeWidth = 1,
			Position = {6,9},
			Size = {92+49*(1-1),169}},
			{Type = "GroupBox",Text = "Inputs",HTextAlign = "Left",CornerRadius = 8,StrokeColor = Colors.Black,StrokeWidth = 1,Position = {6,182},Size = {92+49*(1-1),203}}, ]]
		}
		if props["Custom Commands"].Value == "Yes" then 
		table.insert(graphics,
		{
			Type = "Text",
			Text = "On Commands",
			Color = Colors.Black,
			Position = {0,114},
			Size = {110,30},
			FontSize = 12,
		})
		table.insert(graphics,
		{
			Type = "Text",
			Text = "Off Commands",
			Color = Colors.Black,
			Position = {0,145},
			Size = {110,30},
			FontSize = 12,
		})
		table.insert(graphics,
		{
			Type = "Text",
			Text = "Pulse Commands",
			Color = Colors.Black,
			Position = {0,176},
			Size = {110,30},
			FontSize = 12,
			})
		end

	return layout,graphics
end

-- Components provide a way to save or retain certain settings without necessarily displaying it in another control such as a combobox.
-- For example, the when someone hits the "Save" button on this plugin, it saves the RGB values in the "rgb_storage" component below. 
-- This allows us to do things 'under the hood' which gives the plugin a much sleeker feel. 
function GetComponents(props)  
  return {{Name = "nic_storage", Type = "scriptable_controls", Properties = {
  ["config"] = '[{"Name":"Core","ControlType":"Text","ButtonType":"Momentary","TextType":"TextBox","IndicatorType":"Led","ControlUnit":"dB","PinStyle":"None","Min":-100.0,"Max":12.0,"Count":1.0},{"Name":"Emul","ControlType":"Text","ButtonType":"Momentary","TextType":"TextBox","IndicatorType":"Led","ControlUnit":"dB","PinStyle":"None","Min":-100.0,"Max":12.0,"Count":1.0},{"Name":"lastIP","ControlType":"Text","ButtonType":"Momentary","TextType":"TextBox","IndicatorType":"Led","ControlUnit":"dB","PinStyle":"None","Min":-100.0,"Max":12.0,"Count":1.0},{"Name":"lastname","ControlType":"Text","ButtonType":"Momentary","TextType":"TextBox","IndicatorType":"Led","ControlUnit":"dB","PinStyle":"None","Min":-100.0,"Max":12.0,"Count":1.0}]'}},
  {Name = "rgb_storage", Type = "scriptable_controls", Properties = {
  ["config"] = '[{"Name":"dis1_lastRGB","ControlType":"Text","ButtonType":"Momentary","TextType":"TextBox","IndicatorType":"Led","ControlUnit":"dB","PinStyle":"None","Min":-100.0,"Max":12.0,"Count":1.0}},{"Name":"dis2_lastRGB","ControlType":"Text","ButtonType":"Momentary","TextType":"TextBox","IndicatorType":"Led","ControlUnit":"dB","PinStyle":"None","Min":-100.0,"Max":12.0,"Count":1.0}}]'}}}
end

if Controls then

-- This is the area where you would put your 'Runtime' code, or the 'control' aspect of your plugin.
-- Once you are confident in your script, simply copy and paste that script here, and then you can fully test the plugin completely
-- Don't forget to comment out your code pin and hide the debug before distributing!

require("LuaXML")



--Aliases
ip = Controls.IP.String
Port = Controls.Port.String
Parse = false
sock0=TcpSocket.New()
timer0=Timer.New()


polltime = tonumber(Properties["Polltime in s"].Value) --how often the feedback gets polled from PAA
if Properties["Control Mode"].Value == "Only Q-Sys" then c=1 sockettimeout=0 else c=0 sockettimeout = 0.001* Properties["Socket Timeout in ms"].Value end -- determines if status gets controlled by socket connection or XML 
function SocketConnect() Parse=false sock0:Disconnect() sock0:Connect(tostring(ip), tonumber(Port)) Controls.Status.Value = 4 timer0:Stop()
	if c==0 then Timer.CallAfter(function() sock0:Disconnect() end, 5) end --disconnects if c=0
end

sock0.EventHandler = function(sock, evt, err)   --Status Information about Socket Connection
  if evt == TcpSocket.Events.Connected then
	print( "socket connected" )
	Parse = true
	Timer.CallAfter(function()timer0:Start(polltime)end,15) 
	Controls.Status.Value=0 Controls.Status.String = "Connected"
  elseif evt == TcpSocket.Events.Reconnect then
	print( "socket reconnecting..." )
	Parse = false
	Controls.Status.Value=5 Controls.Status.String = "Reconnecting" 
  elseif evt == TcpSocket.Events.Data then
    print( "socket has data" )
    message = sock:ReadLine(TcpSocket.EOL.Any)
    while (message ~= nil) do
      print( "reading until CrLf got "..message )
      message = sock:ReadLine(TcpSocket.EOL.Any)
    end
  elseif evt == TcpSocket.Events.Closed then
    print( "socket closed by remote" )
  elseif evt == TcpSocket.Events.Error then
    print( "socket closed due to error", err )
  elseif evt == TcpSocket.Events.Timeout then
    print( "socket closed due to timeout" )
  else
    print( "unknown socket event", evt ) --should never happen
  end
  if sock0.IsConnected==false and c==1 then Controls.Status.Value=4 Controls.Status.String="Missing" end
end


--commands for relays to be sent
commands={{},{},{}}
commandinit = function(x,y) print("commandparsing recalled")
	str=Controls[x].String 
for word in str:gmatch('[^,%s]+') do
    table.insert(commands[y],word)
   -- print(word) 
end 
end




for i=1,12 do
Controls.BUTTON[i].EventHandler=function()
	if Controls.Status.Value==0 then
		if sock0.IsConnected == false then
			sock0:Connect(tostring(ip), tonumber(Port))
		end
			if Controls.BUTTON[i].Boolean == true then sock0:Write(commands[1][i].."\r") elseif
			Controls.BUTTON[i].Boolean == false then sock0:Write(commands[2][i].."\r") 
			end
			if sockettimeout>0 then 
				Timer.CallAfter(function() if sock0.IsConnected == true then 
				sock0:Disconnect() print("disconnected")
				end
				end,sockettimeout)
			end
	end   
end
Controls.PULSE[i].EventHandler=function()
	if Controls.Status.Value==0 then	
		if sock0.IsConnected == false then
			sock0:Connect(tostring(ip), tonumber(Port))
		end
			sock0:Write(commands[3][i].."\r")
			if sockettimeout>0 then
				Timer.CallAfter(function()if sock0.IsConnected == true then 
				sock0:Disconnect() print("disconnected")
				end
				end,sockettimeout)
			end     
	end		 
end
end


function statusparse(table, code, data, err)
		if Parse == false then print("no data in xml")	
		elseif Parse == true then
		print("data in xml") 
			local xtract = xml.eval(data)
			LED = {}
			for i=1,12 do
			LED[i] = xtract:find("led"..i)[1]
			Controls.OUT[i].Value=LED[i]
			Controls.BUTTON[i].Value = Controls.OUT[i].Value
			end 
	
			BTN = {}
			for i=1,8 do
			BTN[i] = xtract:find("btn"..i)[1]
			if BTN[i]== "1" then Controls.IN[i].Boolean = false 
			else Controls.IN[i].Boolean = true
			end
			end
	end
	end

	
function GetStatus()
  statpage = ip.."/status.xml"
  HttpClient.Download { Url = statpage, EventHandler = statusparse }
end

function Initialization()
	SocketConnect()
	Controls["Commands On"].EventHandler = function() commands = {{},commands[2],commands[3]} commandinit("Commands On",1) end
	Controls["Commands Off"].EventHandler = function() commands = {commands[1],{},commands[3]} commandinit("Commands Off",2) end
	Controls["Commands Pulse"].EventHandler = function() commands = {commands[1],commands[3],{}}commandinit("Commands Pulse", 3) end
	Controls.IP.EventHandler=function() ip = Controls.IP.String SocketConnect() end
	Controls.Port.EventHandler=function() Port = Controls.Port.String SocketConnect() end
	timer0.EventHandler = GetStatus
	Controls.Status.Value=4
end

Initialization()



end